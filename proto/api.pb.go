// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/api.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SendMessageRequest struct {
	BotToken             string   `protobuf:"bytes,1,opt,name=bot_token,json=botToken,proto3" json:"bot_token,omitempty"`
	ChatId               string   `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	Text                 string   `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendMessageRequest) Reset()         { *m = SendMessageRequest{} }
func (m *SendMessageRequest) String() string { return proto.CompactTextString(m) }
func (*SendMessageRequest) ProtoMessage()    {}
func (*SendMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ecf0878b123623e2, []int{0}
}

func (m *SendMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendMessageRequest.Unmarshal(m, b)
}
func (m *SendMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendMessageRequest.Marshal(b, m, deterministic)
}
func (m *SendMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendMessageRequest.Merge(m, src)
}
func (m *SendMessageRequest) XXX_Size() int {
	return xxx_messageInfo_SendMessageRequest.Size(m)
}
func (m *SendMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendMessageRequest proto.InternalMessageInfo

func (m *SendMessageRequest) GetBotToken() string {
	if m != nil {
		return m.BotToken
	}
	return ""
}

func (m *SendMessageRequest) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *SendMessageRequest) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func init() {
	proto.RegisterType((*SendMessageRequest)(nil), "proto.SendMessageRequest")
}

func init() { proto.RegisterFile("proto/api.proto", fileDescriptor_ecf0878b123623e2) }

var fileDescriptor_ecf0878b123623e2 = []byte{
	// 206 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x8e, 0xbf, 0x4b, 0xc5, 0x30,
	0x10, 0x80, 0xa9, 0x3f, 0x6a, 0x1b, 0x07, 0xe1, 0x06, 0xad, 0xad, 0x83, 0x38, 0x39, 0xa5, 0xa0,
	0xff, 0x80, 0x8b, 0x83, 0xa0, 0x0e, 0xb5, 0xb3, 0x25, 0xb1, 0xd7, 0x18, 0xd4, 0x5c, 0x35, 0x57,
	0xb0, 0xff, 0xbd, 0x24, 0xf1, 0xc1, 0x83, 0x37, 0xe5, 0xbe, 0x7c, 0x07, 0xf7, 0x89, 0x93, 0xf9,
	0x87, 0x98, 0x5a, 0x35, 0x5b, 0x19, 0x27, 0x38, 0x8c, 0x4f, 0x7d, 0x61, 0x88, 0xcc, 0x27, 0x06,
	0xd1, 0x2a, 0xe7, 0x88, 0x15, 0x5b, 0x72, 0x3e, 0x2d, 0xd5, 0xcd, 0xbf, 0x8d, 0xa4, 0x97, 0xa9,
	0xc5, 0xaf, 0x99, 0xd7, 0x24, 0xaf, 0x5e, 0x05, 0xbc, 0xa0, 0x1b, 0x9f, 0xd0, 0x7b, 0x65, 0xb0,
	0xc3, 0xef, 0x05, 0x3d, 0x43, 0x23, 0x4a, 0x4d, 0x3c, 0x30, 0x7d, 0xa0, 0xab, 0xb2, 0xcb, 0xec,
	0xba, 0xec, 0x0a, 0x4d, 0xdc, 0x07, 0x86, 0x33, 0x71, 0xf4, 0xf6, 0xae, 0x78, 0xb0, 0x63, 0xb5,
	0x17, 0x55, 0x1e, 0xf0, 0x61, 0x04, 0x10, 0x07, 0x8c, 0xbf, 0x5c, 0xed, 0xc7, 0xdf, 0x38, 0xdf,
	0x3c, 0x8a, 0xa2, 0x37, 0xcf, 0xc4, 0x76, 0x5a, 0xe1, 0x4e, 0x1c, 0x6f, 0xdd, 0x82, 0xf3, 0x94,
	0x20, 0x77, 0xef, 0xd7, 0xa7, 0x32, 0x35, 0xcb, 0x4d, 0xb3, 0xbc, 0x0f, 0xcd, 0x3a, 0x8f, 0x7c,
	0xfb, 0x17, 0x00, 0x00, 0xff, 0xff, 0x7c, 0xa6, 0x59, 0x3c, 0x09, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TgNotifyClient is the client API for TgNotify service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TgNotifyClient interface {
	SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type tgNotifyClient struct {
	cc *grpc.ClientConn
}

func NewTgNotifyClient(cc *grpc.ClientConn) TgNotifyClient {
	return &tgNotifyClient{cc}
}

func (c *tgNotifyClient) SendMessage(ctx context.Context, in *SendMessageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto.TgNotify/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TgNotifyServer is the server API for TgNotify service.
type TgNotifyServer interface {
	SendMessage(context.Context, *SendMessageRequest) (*empty.Empty, error)
}

// UnimplementedTgNotifyServer can be embedded to have forward compatible implementations.
type UnimplementedTgNotifyServer struct {
}

func (*UnimplementedTgNotifyServer) SendMessage(ctx context.Context, req *SendMessageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendMessage not implemented")
}

func RegisterTgNotifyServer(s *grpc.Server, srv TgNotifyServer) {
	s.RegisterService(&_TgNotify_serviceDesc, srv)
}

func _TgNotify_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TgNotifyServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TgNotify/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TgNotifyServer).SendMessage(ctx, req.(*SendMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TgNotify_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TgNotify",
	HandlerType: (*TgNotifyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _TgNotify_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/api.proto",
}
